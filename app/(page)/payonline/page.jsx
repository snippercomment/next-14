'use client';

import React, { useState } from 'react';
import { 
  ShoppingCart, 
  CreditCard, 
  Truck, 
  Clock, 
  Shield, 
  RefreshCw,
  Phone,
  MapPin,
  CheckCircle,
  AlertCircle
} from 'lucide-react';

const DeliveryPolicyPage = () => {
  const [activeTab, setActiveTab] = useState('order');

  const paymentMethods = [
    { name: 'Thanh to√°n khi nh·∫≠n h√†ng', icon: 'üíµ' },
    { name: 'Th·∫ª t√≠n d·ª•ng/ATM', icon: 'üí≥' },
    
  ];

  const deliveryZones = [
    {
      zone: 'TP.HCM & H√† N·ªôi',
      inner: 'Giao nhanh 2 gi·ªù (<10km) ho·∫∑c 24h',
      outer: 'Trong v√≤ng 24h'
    },
    {
      zone: 'C√°c t·ªânh c√≥ c·ª≠a h√†ng',
      inner: 'Trong v√≤ng 24h',
      outer: '1-2 ng√†y'
    },
    {
      zone: 'Khu v·ª±c kh√°c',
      inner: '2-4 ng√†y',
      outer: '2-4 ng√†y'
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      {/* Header */}
      <div className="bg-white shadow-lg">
        <div className="max-w-6xl mx-auto px-4 py-6">
          <div className="flex items-center space-x-4">          
            <div>
              <h1 className="text-3xl font-bold text-gray-800">H∆∞·ªõng D·∫´n Mua H√†ng T·ª´ Xa</h1>
            
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-6xl mx-auto px-4 py-8">
        {/* Navigation Tabs */}
        <div className="bg-white rounded-2xl shadow-lg p-6 mb-8">
          <div className="flex flex-wrap gap-4 mb-6">
            {[
              { id: 'order', label: 'ƒê·∫∑t H√†ng', icon: ShoppingCart },
              { id: 'payment', label: 'Thanh To√°n', icon: CreditCard },
              { id: 'delivery', label: 'Giao H√†ng', icon: Truck },
              { id: 'policy', label: 'Ch√≠nh S√°ch', icon: Shield }
            ].map(tab => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`flex items-center space-x-2 px-6 py-3 rounded-xl font-semibold transition-all ${
                  activeTab === tab.id
                    ? 'bg-blue-600 text-white shadow-lg'
                    : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
                }`}
              >
                <tab.icon className="w-5 h-5" />
                <span>{tab.label}</span>
              </button>
            ))}
          </div>

          {/* Tab Content */}
          {activeTab === 'order' && (
            <div className="space-y-6">
              <div className="bg-gradient-to-r from-blue-500 to-purple-600 text-white p-6 rounded-xl">
                <h2 className="text-2xl font-bold mb-4 flex items-center">
                  <Phone className="w-6 h-6 mr-3" />
                  C√°ch ƒê·∫∑t H√†ng
                </h2>
                <div className="grid md:grid-cols-2 gap-4">
                  <div className="bg-white/20 backdrop-blur-sm p-4 rounded-lg">
                    <h3 className="font-semibold mb-2">Online</h3>
                    <p>ƒê·∫∑t h√†ng tr·ª±c ti·∫øp tr√™n website</p>
                  </div>
                  <div className="bg-white/20 backdrop-blur-sm p-4 rounded-lg">
                    <h3 className="font-semibold mb-2">T·ªïng ƒë√†i</h3>
                    <p>G·ªçi mi·ªÖn ph√≠: 18002097</p>
                  </div>
                
                </div>
              </div>

              
            </div>
          )}

          {activeTab === 'payment' && (
            <div className="space-y-6">
              <div className="bg-gradient-to-r from-green-500 to-teal-600 text-white p-6 rounded-xl">
                <h2 className="text-2xl font-bold mb-4 flex items-center">
                  <CreditCard className="w-6 h-6 mr-3" />
                  Ph∆∞∆°ng Th·ª©c Thanh To√°n
                </h2>
                <div className="grid md:grid-cols-3 lg:grid-cols-4 gap-3">
                  {paymentMethods.map((method, index) => (
                    <div key={index} className="bg-white/20 backdrop-blur-sm p-3 rounded-lg text-center">
                      <div className="text-2xl mb-2">{method.icon}</div>
                      <p className="text-sm">{method.name}</p>
                    </div>
                  ))}
                </div>
              </div>

              <div className="grid md:grid-cols-2 gap-6">
                <div className="bg-blue-50 p-6 rounded-xl border border-blue-200">
                  <h3 className="text-xl font-bold text-blue-800 mb-4">Ph√≠ V·∫≠n Chuy·ªÉn</h3>
                  <div className="space-y-3">
                    <div className="bg-white p-3 rounded-lg">
                      <p>D∆∞·ªõi 300.000ƒë: Ph√≠ 15.000ƒë</p>
                      <p>T·ª´ 300.000ƒë: Mi·ªÖn ph√≠</p>
                    </div>
                  </div>
                </div>

               
              </div>

              <div className="bg-orange-50 border border-orange-200 p-4 rounded-xl">
                <h4 className="font-semibold text-orange-800 mb-2">C√∫ ph√°p chuy·ªÉn kho·∫£n:</h4>
                <p className="font-mono bg-white p-2 rounded text-center">
                  M√£ ƒë∆°n h√†ng - SƒêT ng∆∞·ªùi mua - T√™n kh√°ch h√†ng
                </p>
              </div>
            </div>
          )}

          {activeTab === 'delivery' && (
            <div className="space-y-6">
              <div className="bg-gradient-to-r from-indigo-500 to-blue-600 text-white p-6 rounded-xl">
                <h2 className="text-2xl font-bold mb-4 flex items-center">
                  <Truck className="w-6 h-6 mr-3" />
                  Th·ªùi Gian Giao H√†ng
                </h2>
                <div className="space-y-4">
                  {deliveryZones.map((zone, index) => (
                    <div key={index} className="bg-white/20 backdrop-blur-sm p-4 rounded-lg">
                      <h3 className="font-semibold mb-2">{zone.zone}</h3>
                      <div className="grid md:grid-cols-2 gap-3 text-sm">
                        <div>
                          <span className="font-medium">N·ªôi th√†nh:</span> {zone.inner}
                        </div>
                        <div>
                          <span className="font-medium">Ngo·∫°i th√†nh:</span> {zone.outer}
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              <div className="grid md:grid-cols-2 gap-6">
                <div className="bg-green-50 p-6 rounded-xl border border-green-200">
                  <div className="flex items-center space-x-3 mb-4">
                    <Clock className="w-6 h-6 text-green-600" />
                    <h3 className="text-xl font-bold text-green-800">Quy ƒê·ªãnh Giao H√†ng</h3>
                  </div>
                  <div className="space-y-2 text-sm">
                    <p>‚Ä¢ ƒê∆°n h√†ng x√°c nh·∫≠n tr∆∞·ªõc 15h30</p>
                    <p>‚Ä¢ Kh√¥ng giao Ch·ªß nh·∫≠t v√† ng√†y L·ªÖ</p>
                    <p>‚Ä¢ Ki·ªÉm tra CCCD v·ªõi ƒë∆°n ‚â•10 tri·ªáu</p>
                    <p>‚Ä¢ M√£ OTP cho ƒë∆°n tr·∫£ tr∆∞·ªõc ‚â•2 tri·ªáu</p>
                  </div>
                </div>

                <div className="bg-red-50 p-6 rounded-xl border border-red-200">
                  <div className="flex items-center space-x-3 mb-4">
                    <MapPin className="w-6 h-6 text-red-600" />
                    <h3 className="text-xl font-bold text-red-800">Th√¥ng Tin C·∫ßn Thi·∫øt</h3>
                  </div>
                  <div className="space-y-2 text-sm">
                    <p>‚Ä¢ T√™n ng∆∞·ªùi nh·∫≠n</p>
                    <p>‚Ä¢ ƒê·ªãa ch·ªâ chi ti·∫øt</p>
                    <p>‚Ä¢ S·ªë ƒëi·ªán tho·∫°i</p>
                    <p>‚Ä¢ Ghi ch√∫ xu·∫•t h√≥a ƒë∆°n (n·∫øu c√≥)</p>
                  </div>
                </div>
              </div>
            </div>
          )}

          {activeTab === 'policy' && (
            <div className="space-y-6">
              <div className="bg-gradient-to-r from-emerald-500 to-green-600 text-white p-6 rounded-xl">
                <h2 className="text-2xl font-bold mb-4 flex items-center">
                  <Shield className="w-6 h-6 mr-3" />
                  Ch√≠nh S√°ch ƒê·ªïi Tr·∫£
                </h2>
                <div className="grid md:grid-cols-2 gap-4">
                  <div className="bg-white/20 backdrop-blur-sm p-4 rounded-lg">
                    <div className="flex items-center space-x-2 mb-2">
                      <RefreshCw className="w-5 h-5" />
                      <h3 className="font-semibold">Th·ªùi Gian ƒê·ªïi</h3>
                    </div>
                    <p className="text-sm">Trong v√≤ng 35 ng√†y t·ª´ ng√†y xu·∫•t b√°n</p>
                  </div>
                  <div className="bg-white/20 backdrop-blur-sm p-4 rounded-lg">
                    <div className="flex items-center space-x-2 mb-2">
                      <CheckCircle className="w-5 h-5" />
                      <h3 className="font-semibold">B·∫£o H√†nh</h3>
                    </div>
                    <p className="text-sm">H·ªó tr·ª£ v·∫≠n chuy·ªÉn trong 15 ng√†y ƒë·∫ßu</p>
                  </div>
                </div>
              </div>

              <div className="bg-yellow-50 p-6 rounded-xl border border-yellow-200">
                <h3 className="text-xl font-bold text-yellow-800 mb-4">‚è∞ Th·ªùi Gian Ho√†n Ti·ªÅn</h3>
                <div className="grid md:grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <div className="bg-white p-3 rounded-lg">
                      <p className="font-semibold">Ti·ªÅn m·∫∑t</p>
                      <p className="text-sm text-gray-600">Ho√†n ngay t·∫°i c·ª≠a h√†ng</p>
                    </div>
                  </div>
                  <div className="space-y-2">
                    <div className="bg-white p-3 rounded-lg">
                      <p className="font-semibold">Th·∫ª t√≠n d·ª•ng</p>
                      <p className="text-sm text-gray-600">7-15 ng√†y l√†m vi·ªác</p>
                    </div>                 
                  </div>
                </div>
              </div>
            </div>
          )}
        </div>      
      </div>
    </div>
  );
};

export default DeliveryPolicyPage;